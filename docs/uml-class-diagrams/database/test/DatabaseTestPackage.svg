<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="986px" preserveAspectRatio="none" style="width:1274px;height:986px;" version="1.1" viewBox="0 0 1274 986" width="1274px" zoomAndPan="magnify"><defs><filter height="300%" id="ffnfe8jdidaf8" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[1dbda88d88b075ce9aee8f1e1f073379]
cluster edu.oakland.test.database--><polygon fill="#FFFFFF" filter="url(#ffnfe8jdidaf8)" points="22,24,237,24,244,46.2969,1252,46.2969,1252,974,22,974,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="244" y1="46.2969" y2="46.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="209" x="26" y="38.9951">edu.oakland.test.database</text><!--MD5=[9972e7e3de19cab719576951c76d2a1c]
class DatabaseCommInterfaceImplementationTests--><rect fill="#FEFECE" filter="url(#ffnfe8jdidaf8)" height="150.4375" id="DatabaseCommInterfaceImplementationTests" style="stroke: #A80036; stroke-width: 1.5;" width="435" x="37.5" y="59"/><ellipse cx="107.75" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M110.7188,80.6406 Q110.1406,80.9375 109.5,81.0781 Q108.8594,81.2344 108.1563,81.2344 Q105.6563,81.2344 104.3281,79.5938 Q103.0156,77.9375 103.0156,74.8125 Q103.0156,71.6875 104.3281,70.0313 Q105.6563,68.375 108.1563,68.375 Q108.8594,68.375 109.5,68.5313 Q110.1563,68.6875 110.7188,68.9844 L110.7188,71.7031 Q110.0938,71.125 109.5,70.8594 Q108.9063,70.5781 108.2813,70.5781 Q106.9375,70.5781 106.25,71.6563 Q105.5625,72.7188 105.5625,74.8125 Q105.5625,76.9063 106.25,77.9844 Q106.9375,79.0469 108.2813,79.0469 Q108.9063,79.0469 109.5,78.7813 Q110.0938,78.5 110.7188,77.9219 L110.7188,80.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="286" x="128.25" y="79.1543">DatabaseCommInterfaceImplementationTests</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="38.5" x2="471.5" y1="91" y2="91"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="38.5" x2="471.5" y1="99" y2="99"/><ellipse cx="48.5" cy="110" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="57.5" y="113.2104">void rfidInIsRfidOut()</text><ellipse cx="48.5" cy="122.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="57.5" y="126.0151">void offsetMatchDataPoint()</text><ellipse cx="48.5" cy="135.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="57.5" y="138.8198">void offsetMatchTrackData()</text><ellipse cx="48.5" cy="148.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="57.5" y="151.6245">void trackDataInIsTrackDataOut()</text><ellipse cx="48.5" cy="161.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="57.5" y="164.4292">void modeInIsModeOut()</text><ellipse cx="48.5" cy="174.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="57.5" y="177.2339">void databaseCommManagerNotNull()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="45.5" y="183.8281"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="57.5" y="190.0386">LocationDataPoint[] generateRandomLocationDataPointsArray(int length)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="45.5" y="196.6328"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="57.5" y="202.8433">LocationDataPoint generateRandomLocationDataPoint()</text><!--MD5=[19b4afd77b23828cbf862455ffd80e17]
class DatabaseCommManagerImplementationTests--><rect fill="#FEFECE" filter="url(#ffnfe8jdidaf8)" height="124.8281" id="DatabaseCommManagerImplementationTests" style="stroke: #A80036; stroke-width: 1.5;" width="337" x="507.5" y="71.5"/><ellipse cx="531.5" cy="87.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M534.4688,93.1406 Q533.8906,93.4375 533.25,93.5781 Q532.6094,93.7344 531.9063,93.7344 Q529.4063,93.7344 528.0781,92.0938 Q526.7656,90.4375 526.7656,87.3125 Q526.7656,84.1875 528.0781,82.5313 Q529.4063,80.875 531.9063,80.875 Q532.6094,80.875 533.25,81.0313 Q533.9063,81.1875 534.4688,81.4844 L534.4688,84.2031 Q533.8438,83.625 533.25,83.3594 Q532.6563,83.0781 532.0313,83.0781 Q530.6875,83.0781 530,84.1563 Q529.3125,85.2188 529.3125,87.3125 Q529.3125,89.4063 530,90.4844 Q530.6875,91.5469 532.0313,91.5469 Q532.6563,91.5469 533.25,91.2813 Q533.8438,91 534.4688,90.4219 L534.4688,93.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="285" x="547.5" y="91.6543">DatabaseCommManagerImplementationTests</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="508.5" x2="843.5" y1="103.5" y2="103.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="508.5" x2="843.5" y1="111.5" y2="111.5"/><ellipse cx="518.5" cy="122.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="527.5" y="125.7104">void rfidInIsRfidOut()</text><ellipse cx="518.5" cy="135.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="527.5" y="138.5151">void offsetMatchDataPoint()</text><ellipse cx="518.5" cy="148.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="527.5" y="151.3198">void modeInIsModeOut()</text><ellipse cx="518.5" cy="160.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="527.5" y="164.1245">void trackDataInIsTrackDataOut()</text><ellipse cx="518.5" cy="173.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="527.5" y="176.9292">void databasePersistentStorageIsNotNull()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="515.5" y="183.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="527.5" y="189.7339">LocationDataPoint generateRandomLocationDataPoint()</text><!--MD5=[f9a3f5338f30ed1d8430e6dbbfff1c17]
class DatabaseGisInterfaceImplementationTests--><rect fill="#FEFECE" filter="url(#ffnfe8jdidaf8)" height="99.2188" id="DatabaseGisInterfaceImplementationTests" style="stroke: #A80036; stroke-width: 1.5;" width="299" x="879.5" y="84.5"/><ellipse cx="894.5" cy="100.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M897.4688,106.1406 Q896.8906,106.4375 896.25,106.5781 Q895.6094,106.7344 894.9063,106.7344 Q892.4063,106.7344 891.0781,105.0938 Q889.7656,103.4375 889.7656,100.3125 Q889.7656,97.1875 891.0781,95.5313 Q892.4063,93.875 894.9063,93.875 Q895.6094,93.875 896.25,94.0313 Q896.9063,94.1875 897.4688,94.4844 L897.4688,97.2031 Q896.8438,96.625 896.25,96.3594 Q895.6563,96.0781 895.0313,96.0781 Q893.6875,96.0781 893,97.1563 Q892.3125,98.2188 892.3125,100.3125 Q892.3125,102.4063 893,103.4844 Q893.6875,104.5469 895.0313,104.5469 Q895.6563,104.5469 896.25,104.2813 Q896.8438,104 897.4688,103.4219 L897.4688,106.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="267" x="908.5" y="104.6543">DatabaseGisInterfaceImplementationTests</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="880.5" x2="1177.5" y1="116.5" y2="116.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="880.5" x2="1177.5" y1="124.5" y2="124.5"/><ellipse cx="890.5" cy="135.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="899.5" y="138.7104">void dataPointInIsDataPointOut()</text><ellipse cx="890.5" cy="148.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="899.5" y="151.5151">void modeInIsModeOut()</text><ellipse cx="890.5" cy="161.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="899.5" y="164.3198">void currentSatGetsNextSat()</text><ellipse cx="890.5" cy="173.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="899.5" y="177.1245">void databaseGisManagerNotNull()</text><!--MD5=[d5d5d13d78d7ebf84dba9be33d86b21c]
class DatabaseGisManagerImplementationTests--><rect fill="#FEFECE" filter="url(#ffnfe8jdidaf8)" height="99.2188" id="DatabaseGisManagerImplementationTests" style="stroke: #A80036; stroke-width: 1.5;" width="298" x="38" y="416.5"/><ellipse cx="53" cy="432.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M55.9688,438.1406 Q55.3906,438.4375 54.75,438.5781 Q54.1094,438.7344 53.4063,438.7344 Q50.9063,438.7344 49.5781,437.0938 Q48.2656,435.4375 48.2656,432.3125 Q48.2656,429.1875 49.5781,427.5313 Q50.9063,425.875 53.4063,425.875 Q54.1094,425.875 54.75,426.0313 Q55.4063,426.1875 55.9688,426.4844 L55.9688,429.2031 Q55.3438,428.625 54.75,428.3594 Q54.1563,428.0781 53.5313,428.0781 Q52.1875,428.0781 51.5,429.1563 Q50.8125,430.2188 50.8125,432.3125 Q50.8125,434.4063 51.5,435.4844 Q52.1875,436.5469 53.5313,436.5469 Q54.1563,436.5469 54.75,436.2813 Q55.3438,436 55.9688,435.4219 L55.9688,438.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="266" x="67" y="436.6543">DatabaseGisManagerImplementationTests</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="335" y1="448.5" y2="448.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="335" y1="456.5" y2="456.5"/><ellipse cx="49" cy="467.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="58" y="470.7104">void dataPointInIsDataPointOut()</text><ellipse cx="49" cy="480.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="58" y="483.5151">void modeInIsModeOut()</text><ellipse cx="49" cy="493.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="58" y="496.3198">void currentSatGetNextSat()</text><ellipse cx="49" cy="505.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="58" y="509.1245">void persistentStorageIsNotNull()</text><!--MD5=[337efbffbd56f146d91a6b2d993910ff]
class PersistentStorageManagerTests--><rect fill="#FEFECE" filter="url(#ffnfe8jdidaf8)" height="393.7266" id="PersistentStorageManagerTests" style="stroke: #A80036; stroke-width: 1.5;" width="435" x="370.5" y="269"/><ellipse cx="482.25" cy="285" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M485.2188,290.6406 Q484.6406,290.9375 484,291.0781 Q483.3594,291.2344 482.6563,291.2344 Q480.1563,291.2344 478.8281,289.5938 Q477.5156,287.9375 477.5156,284.8125 Q477.5156,281.6875 478.8281,280.0313 Q480.1563,278.375 482.6563,278.375 Q483.3594,278.375 484,278.5313 Q484.6563,278.6875 485.2188,278.9844 L485.2188,281.7031 Q484.5938,281.125 484,280.8594 Q483.4063,280.5781 482.7813,280.5781 Q481.4375,280.5781 480.75,281.6563 Q480.0625,282.7188 480.0625,284.8125 Q480.0625,286.9063 480.75,287.9844 Q481.4375,289.0469 482.7813,289.0469 Q483.4063,289.0469 484,288.7813 Q484.5938,288.5 485.2188,287.9219 L485.2188,290.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="203" x="502.75" y="289.1543">PersistentStorageManagerTests</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="371.5" x2="804.5" y1="301" y2="301"/><ellipse cx="381.5" cy="312" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="112" x="390.5" y="315.2104">String randomArray</text><ellipse cx="381.5" cy="324.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="390.5" y="328.0151">LocationDataPoint ldp</text><ellipse cx="381.5" cy="337.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="68" x="390.5" y="340.8198">float course</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="390.5" y="353.6245">ArrayList&lt;LocationDataPoint&gt; locDataPoint</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="390.5" y="366.4292">ArrayList&lt;TrackData&gt; trackData</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="371.5" x2="804.5" y1="373.0234" y2="373.0234"/><ellipse cx="381.5" cy="384.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="390.5" y="387.2339">void rfidDataInIsRfidDataOut()</text><ellipse cx="381.5" cy="396.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="390.5" y="400.0386">void offsetMatchDataPoint()</text><ellipse cx="381.5" cy="409.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="390.5" y="412.8433">void locationDataPointInIsDataPointOut()</text><ellipse cx="381.5" cy="422.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="390.5" y="425.6479">void offsetMatchTrackData()</text><ellipse cx="381.5" cy="435.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="390.5" y="438.4526">void trackDataInIsTrackDataOut()</text><ellipse cx="381.5" cy="448.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="390.5" y="451.2573">void modeInIsModeOut()</text><ellipse cx="381.5" cy="460.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="390.5" y="464.062">void currentSatMatchNextSat()</text><ellipse cx="381.5" cy="473.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="390.5" y="476.8667">void cannotStoreNullLocationDataPoint()</text><ellipse cx="381.5" cy="486.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="390.5" y="489.6714">void cannotStoreNullTrackData()</text><ellipse cx="381.5" cy="499.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="390.5" y="502.4761">void locationDataPointOffsetOutOfBoundsReturnsNull()</text><ellipse cx="381.5" cy="512.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="336" x="390.5" y="515.2808">void trackDataOffsetOutOfBoundsReturnsEmptyTrackData()</text><ellipse cx="381.5" cy="524.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="390.5" y="528.0854">void nonexistentSatelliteNameReturnsEmptyNext()</text><ellipse cx="381.5" cy="537.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="390.5" y="540.8901">void lastSatelliteNameInListReturnsEmptyNext()</text><ellipse cx="381.5" cy="550.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="390.5" y="553.6948">void cannotPassNullLocationDataPointInConstructor()</text><ellipse cx="381.5" cy="563.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="390.5" y="566.4995">void cannotPassNullTrackDataInConstructor()</text><ellipse cx="381.5" cy="576.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="390.5" y="579.3042">void cannotPassNullNextSatellitesInConstructor()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="378.5" y="585.8984"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="390.5" y="592.1089">float generateRandomCourse()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="378.5" y="598.7031"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="390.5" y="604.9136">float generateRandomSpeed()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="378.5" y="611.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="244" x="390.5" y="617.7183">int generateRandomTooSmallArrayLength()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="378.5" y="624.3125"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="409" x="390.5" y="630.5229">LocationDataPoint[] generateRandomLocationDataPointsArray(int length)</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="378.5" y="637.1172"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="311" x="390.5" y="643.3276">LocationDataPoint generateRandomLocationDataPoint()</text><rect fill="#F24D5C" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="378.5" y="649.9219"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="390.5" y="656.1323">String generateRandomString()</text><!--MD5=[fa7b8c1f2c19c6f98083b70ee500265e]
class DatabaseCommManagerStub--><rect fill="#FEFECE" filter="url(#ffnfe8jdidaf8)" height="231.2656" id="DatabaseCommManagerStub" style="stroke: #A80036; stroke-width: 1.5;" width="395" x="840.5" y="350.5"/><ellipse cx="942.25" cy="366.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M945.2188,372.1406 Q944.6406,372.4375 944,372.5781 Q943.3594,372.7344 942.6563,372.7344 Q940.1563,372.7344 938.8281,371.0938 Q937.5156,369.4375 937.5156,366.3125 Q937.5156,363.1875 938.8281,361.5313 Q940.1563,359.875 942.6563,359.875 Q943.3594,359.875 944,360.0313 Q944.6563,360.1875 945.2188,360.4844 L945.2188,363.2031 Q944.5938,362.625 944,362.3594 Q943.4063,362.0781 942.7813,362.0781 Q941.4375,362.0781 940.75,363.1563 Q940.0625,364.2188 940.0625,366.3125 Q940.0625,368.4063 940.75,369.4844 Q941.4375,370.5469 942.7813,370.5469 Q943.4063,370.5469 944,370.2813 Q944.5938,370 945.2188,369.4219 L945.2188,372.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="183" x="962.75" y="370.6543">DatabaseCommManagerStub</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="841.5" x2="1234.5" y1="382.5" y2="382.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="848.5" y="390.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="860.5" y="396.7104">int rfid</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="848.5" y="403.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="860.5" y="409.5151">LocationDataPoint ldp</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="848.5" y="416.1094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="48" x="860.5" y="422.3198">int index</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="848.5" y="428.9141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="860.5" y="435.1245">TrackData td</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="848.5" y="441.7188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="860.5" y="447.9292">String mode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="841.5" x2="1234.5" y1="454.5234" y2="454.5234"/><ellipse cx="851.5" cy="482.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="860.5" y="485.5386">int passGetRfidRequest()</text><ellipse cx="851.5" cy="495.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="359" x="860.5" y="498.3433">LocationDataPoint passGetLocationDataPointRequest(int offset)</text><ellipse cx="851.5" cy="507.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="271" x="860.5" y="511.1479">TrackData passGetTrackDataRequest(int offset)</text><ellipse cx="851.5" cy="520.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="860.5" y="523.9526">void passStoreTrackDataRequest(TrackData trackData)</text><ellipse cx="851.5" cy="533.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="860.5" y="536.7573">String passGetModeRequest()</text><ellipse cx="851.5" cy="546.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="860.5" y="549.562">void storeMode(String s)</text><ellipse cx="851.5" cy="559.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="860.5" y="562.3667">int getIndex()</text><ellipse cx="851.5" cy="571.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="860.5" y="575.1714">void storeLocationDataPoint(LocationDataPoint locationDataPoint)</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="841.5" x2="1005" y1="468.9258" y2="468.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="1005" y="472.2339">Use Case 1</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="1071" x2="1234.5" y1="468.9258" y2="468.9258"/><!--MD5=[0dcd1ba190f32b8320dd3e9d30c4a7b4]
class DatabaseGisManagerStub--><rect fill="#FEFECE" filter="url(#ffnfe8jdidaf8)" height="230.4609" id="DatabaseGisManagerStub" style="stroke: #A80036; stroke-width: 1.5;" width="369" x="38.5" y="725.5"/><ellipse cx="136.75" cy="741.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M139.7188,747.1406 Q139.1406,747.4375 138.5,747.5781 Q137.8594,747.7344 137.1563,747.7344 Q134.6563,747.7344 133.3281,746.0938 Q132.0156,744.4375 132.0156,741.3125 Q132.0156,738.1875 133.3281,736.5313 Q134.6563,734.875 137.1563,734.875 Q137.8594,734.875 138.5,735.0313 Q139.1563,735.1875 139.7188,735.4844 L139.7188,738.2031 Q139.0938,737.625 138.5,737.3594 Q137.9063,737.0781 137.2813,737.0781 Q135.9375,737.0781 135.25,738.1563 Q134.5625,739.2188 134.5625,741.3125 Q134.5625,743.4063 135.25,744.4844 Q135.9375,745.5469 137.2813,745.5469 Q137.9063,745.5469 138.5,745.2813 Q139.0938,745 139.7188,744.4219 L139.7188,747.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="164" x="157.25" y="745.6543">DatabaseGisManagerStub</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="406.5" y1="757.5" y2="757.5"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="765.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="58.5" y="771.7104">LocationDataPoint ldp</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="46.5" y="778.3047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="58.5" y="784.5151">String mode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="406.5" y1="791.1094" y2="791.1094"/><ellipse cx="49.5" cy="818.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="58.5" y="822.1245">LocationDataPoint getLocationDataPoint()</text><ellipse cx="49.5" cy="831.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="343" x="58.5" y="834.9292">void passStoreRequest(LocationDataPoint locationDataPoint)</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="39.5" x2="190" y1="805.5117" y2="805.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="190" y="808.8198">Use Case 1</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="256" x2="406.5" y1="805.5117" y2="805.5117"/><ellipse cx="49.5" cy="861.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="209" x="58.5" y="864.5386">void passModeRequest(String mode)</text><ellipse cx="49.5" cy="874.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="58.5" y="877.3433">String passNextSatRequest(String currentSat)</text><ellipse cx="49.5" cy="886.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="58.5" y="890.1479">String getMode()</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="39.5" x2="190" y1="847.9258" y2="847.9258"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="190" y="851.2339">Use Case 2</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="256" x2="406.5" y1="847.9258" y2="847.9258"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="39.5" x2="406.5" y1="896.7422" y2="896.7422"/><ellipse cx="49.5" cy="907.7422" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="58.5" y="910.9526">void dataPointInIsDataPointOut</text><ellipse cx="49.5" cy="920.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="58.5" y="923.7573">void currentSatGetsNextSat()</text><ellipse cx="49.5" cy="933.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="58.5" y="936.562">void modeInISModeOut()</text><ellipse cx="49.5" cy="946.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="58.5" y="949.3667">void persistentStorageIsNotNull()</text><!--MD5=[31f48955623aa6cc6e2828f210a550ba]
class DatabasePersistentStorageStub--><rect fill="#FEFECE" filter="url(#ffnfe8jdidaf8)" height="235.2656" id="DatabasePersistentStorageStub" style="stroke: #A80036; stroke-width: 1.5;" width="395" x="442.5" y="723"/><ellipse cx="533.75" cy="739" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M536.7188,744.6406 Q536.1406,744.9375 535.5,745.0781 Q534.8594,745.2344 534.1563,745.2344 Q531.6563,745.2344 530.3281,743.5938 Q529.0156,741.9375 529.0156,738.8125 Q529.0156,735.6875 530.3281,734.0313 Q531.6563,732.375 534.1563,732.375 Q534.8594,732.375 535.5,732.5313 Q536.1563,732.6875 536.7188,732.9844 L536.7188,735.7031 Q536.0938,735.125 535.5,734.8594 Q534.9063,734.5781 534.2813,734.5781 Q532.9375,734.5781 532.25,735.6563 Q531.5625,736.7188 531.5625,738.8125 Q531.5625,740.9063 532.25,741.9844 Q532.9375,743.0469 534.2813,743.0469 Q534.9063,743.0469 535.5,742.7813 Q536.0938,742.5 536.7188,741.9219 L536.7188,744.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="204" x="554.25" y="743.1543">DatabasePersistentStorageStub</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="443.5" x2="836.5" y1="755" y2="755"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="450.5" y="763"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="462.5" y="769.2104">String mode</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="450.5" y="775.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="462.5" y="782.0151">LocationDataPoint ldp</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="450.5" y="788.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="37" x="462.5" y="794.8198">int rfid</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="450.5" y="801.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="462.5" y="807.6245">TrackData trackData</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="443.5" x2="836.5" y1="814.2188" y2="814.2188"/><ellipse cx="453.5" cy="842.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="462.5" y="845.2339">int locateRfidData()</text><ellipse cx="453.5" cy="854.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="462.5" y="858.0386">LocationDataPoint getLocationDataPoint(int offset)</text><ellipse cx="453.5" cy="867.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="462.5" y="870.8433">void storeLocationDataPoint(LocationDataPoint locationDataPoint)</text><ellipse cx="453.5" cy="880.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="462.5" y="883.6479">TrackData getTrackData(int offset)</text><ellipse cx="453.5" cy="893.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="462.5" y="896.4526">void storeTrackData(TrackData trackData)</text><ellipse cx="453.5" cy="906.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="462.5" y="909.2573">String getMode()</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="443.5" x2="607" y1="828.6211" y2="828.6211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="607" y="831.9292">Use Case 1</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="673" x2="836.5" y1="828.6211" y2="828.6211"/><ellipse cx="453.5" cy="935.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="462.5" y="938.8667">void storeMode(String mode)</text><ellipse cx="453.5" cy="948.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="462.5" y="951.6714">String getNextSat(String currentSat)</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="443.5" x2="607" y1="922.2539" y2="922.2539"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="607" y="925.562">Use Case 2</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="673" x2="836.5" y1="922.2539" y2="922.2539"/><!--MD5=[ebfc8aaa0894d00da2e9a651710c5555]
link DatabaseCommInterfaceImplementationTests to DatabaseCommManagerImplementationTests--><!--MD5=[fcde76d672e754316e9c3c9ebda7d3ea]
link DatabaseCommManagerImplementationTests to DatabaseGisInterfaceImplementationTests--><!--MD5=[cc0b37613f6b3ea7612229edaf9f7d70]
link DatabaseCommInterfaceImplementationTests to DatabaseGisManagerImplementationTests--><!--MD5=[9e00509652820fd9f8792e5f2ef7fb86]
link DatabaseGisManagerImplementationTests to PersistentStorageManagerTests--><!--MD5=[ebc9869dbe4d478d3e3331c2c92e2f5c]
link PersistentStorageManagerTests to DatabaseCommManagerStub--><!--MD5=[1c323b65c78d2bcd023493445eebe362]
link DatabaseGisManagerImplementationTests to DatabaseGisManagerStub--><!--MD5=[9c045230afbcd4b8ca77235752214571]
link DatabaseGisManagerStub to DatabasePersistentStorageStub--><!--MD5=[8b6446d079f0b7e3178910760f49737c]
@startuml DatabaseTestPackage

package edu.oakland.test.database {
    
}


package edu.oakland.test.database {
    class DatabaseCommInterfaceImplementationTests {
        + void rfidInIsRfidOut()
        + void offsetMatchDataPoint()
        + void offsetMatchTrackData()
        + void trackDataInIsTrackDataOut()
        + void modeInIsModeOut()
        + void databaseCommManagerNotNull()
        - LocationDataPoint[] generateRandomLocationDataPointsArray(int length)
        - LocationDataPoint generateRandomLocationDataPoint()
    }
}


package edu.oakland.test.database {
    class DatabaseCommManagerImplementationTests {
        + void rfidInIsRfidOut()
        + void offsetMatchDataPoint()
        + void modeInIsModeOut()
        + void trackDataInIsTrackDataOut()
        + void databasePersistentStorageIsNotNull() 
        - LocationDataPoint generateRandomLocationDataPoint()
    }
}


package edu.oakland.test.database {
    class DatabaseGisInterfaceImplementationTests {
        + void dataPointInIsDataPointOut()
        + void modeInIsModeOut()
        + void currentSatGetsNextSat()
        + void databaseGisManagerNotNull()
    }
}


package edu.oakland.test.database {
    class DatabaseGisManagerImplementationTests {
        + void dataPointInIsDataPointOut()
        + void modeInIsModeOut()
        + void currentSatGetNextSat()
        + void persistentStorageIsNotNull()
    }
}


package edu.oakland.test.database {
    class PersistentStorageManagerTests {
        + String randomArray
        + LocationDataPoint ldp
        + float course
        ArrayList<LocationDataPoint> locDataPoint
        ArrayList<TrackData> trackData
        + void rfidDataInIsRfidDataOut()
        + void offsetMatchDataPoint()
        + void locationDataPointInIsDataPointOut()
        + void offsetMatchTrackData()
        + void trackDataInIsTrackDataOut()
        + void modeInIsModeOut()
        + void currentSatMatchNextSat()
        + void cannotStoreNullLocationDataPoint()
        + void cannotStoreNullTrackData()
        + void locationDataPointOffsetOutOfBoundsReturnsNull()
        + void trackDataOffsetOutOfBoundsReturnsEmptyTrackData()
        + void nonexistentSatelliteNameReturnsEmptyNext()
        + void lastSatelliteNameInListReturnsEmptyNext()
        + void cannotPassNullLocationDataPointInConstructor()
        + void cannotPassNullTrackDataInConstructor()
        + void cannotPassNullNextSatellitesInConstructor()
        - float generateRandomCourse()
        - float generateRandomSpeed()
        - int generateRandomTooSmallArrayLength()
        - LocationDataPoint[] generateRandomLocationDataPointsArray(int length)
        - LocationDataPoint generateRandomLocationDataPoint()
        - String generateRandomString()
    }
}


package edu.oakland.test.database {
    class DatabaseCommManagerStub {
        - int rfid
        - LocationDataPoint ldp
        - int index
        - TrackData td
        - String mode
        __
        .. Use Case 1 ..
        + int passGetRfidRequest()
        + LocationDataPoint passGetLocationDataPointRequest(int offset)
        + TrackData passGetTrackDataRequest(int offset)
        + void passStoreTrackDataRequest(TrackData trackData)
        + String passGetModeRequest()
        + void storeMode(String s)
        + int getIndex()
        + void storeLocationDataPoint(LocationDataPoint locationDataPoint)
    }
}


package edu.oakland.test.database {
    class DatabaseGisManagerStub {
        - LocationDataPoint ldp
        - String mode
        __
        .. Use Case 1 ..
        + LocationDataPoint getLocationDataPoint()
        + void passStoreRequest(LocationDataPoint locationDataPoint)
        .. Use Case 2 ..
        + void passModeRequest(String mode)
        + String passNextSatRequest(String currentSat)
        + String getMode()
    }
}


package edu.oakland.test.database {
    class DatabaseGisManagerStub {
        __
        + void dataPointInIsDataPointOut
        + void currentSatGetsNextSat()
        + void modeInISModeOut()
        + void persistentStorageIsNotNull()
    }
}


package edu.oakland.test.database {
    class DatabasePersistentStorageStub {
        - String mode
        - LocationDataPoint ldp
        - int rfid
        - TrackData trackData
        __
        .. Use Case 1 ..
        + int locateRfidData()
        + LocationDataPoint getLocationDataPoint(int offset)
        + void storeLocationDataPoint(LocationDataPoint locationDataPoint)
        + TrackData getTrackData(int offset)
        + void storeTrackData(TrackData trackData)
        + String getMode()
        .. Use Case 2 ..
        + void storeMode(String mode)
        + String getNextSat(String currentSat)
    }
}


@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 GMT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.9+11-Ubuntu-0ubuntu1
Operating System: Linux
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>