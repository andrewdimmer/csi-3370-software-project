<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="673px" preserveAspectRatio="none" style="width:866px;height:673px;" version="1.1" viewBox="0 0 866 673" width="866px" zoomAndPan="magnify"><defs><filter height="300%" id="f1for805qzhkgw" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[1dbda88d88b075ce9aee8f1e1f073379]
cluster edu.oakland.test.database--><polygon fill="#FFFFFF" filter="url(#f1for805qzhkgw)" points="22,24,237,24,244,46.2969,392,46.2969,392,302,22,302,22,24" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="22" x2="244" y1="46.2969" y2="46.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="209" x="26" y="38.9951">edu.oakland.test.database</text><!--MD5=[c2e276049abfe145c9906edb061abd32]
cluster edu.oakland.production.database--><polygon fill="#FFFFFF" filter="url(#f1for805qzhkgw)" points="416,45.5,686,45.5,693,67.7969,844,67.7969,844,661,416,661,416,45.5" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="416" x2="693" y1="67.7969" y2="67.7969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="264" x="420" y="60.4951">edu.oakland.production.database</text><!--MD5=[f73f8dddde1051b1e4af985b9a10a6cb]
class DatabasePersistentStorageImplementationTests--><rect fill="#FEFECE" filter="url(#f1for805qzhkgw)" height="227.2656" id="DatabasePersistentStorageImplementationTests" style="stroke: #A80036; stroke-width: 1.5;" width="338" x="38" y="59"/><ellipse cx="53" cy="75" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M55.9688,80.6406 Q55.3906,80.9375 54.75,81.0781 Q54.1094,81.2344 53.4063,81.2344 Q50.9063,81.2344 49.5781,79.5938 Q48.2656,77.9375 48.2656,74.8125 Q48.2656,71.6875 49.5781,70.0313 Q50.9063,68.375 53.4063,68.375 Q54.1094,68.375 54.75,68.5313 Q55.4063,68.6875 55.9688,68.9844 L55.9688,71.7031 Q55.3438,71.125 54.75,70.8594 Q54.1563,70.5781 53.5313,70.5781 Q52.1875,70.5781 51.5,71.6563 Q50.8125,72.7188 50.8125,74.8125 Q50.8125,76.9063 51.5,77.9844 Q52.1875,79.0469 53.5313,79.0469 Q54.1563,79.0469 54.75,78.7813 Q55.3438,78.5 55.9688,77.9219 L55.9688,80.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="306" x="67" y="79.1543">DatabasePersistentStorageImplementationTests</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="375" y1="91" y2="91"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="375" y1="99" y2="99"/><ellipse cx="49" cy="110" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="58" y="113.2104">void rfidDataInIsRfidDataOut()</text><ellipse cx="49" cy="122.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="58" y="126.0151">void offsetMatchDataPoint()</text><ellipse cx="49" cy="135.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="58" y="138.8198">void locationDataPointInIsDataPointOut()</text><ellipse cx="49" cy="148.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="58" y="151.6245">void offsetMatchTrackData()</text><ellipse cx="49" cy="161.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="58" y="164.4292">void trackDataInIsTrackDataOut()</text><ellipse cx="49" cy="174.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="58" y="177.2339">void readModeInIsModeOut()</text><ellipse cx="49" cy="186.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="58" y="190.0386">void writeModeInIsModeOut()</text><ellipse cx="49" cy="199.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="58" y="202.8433">void currentSatMatchNextSat()</text><ellipse cx="49" cy="212.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="226" x="58" y="215.6479">void cannotStoreNullLocationDataPoint()</text><ellipse cx="49" cy="225.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="58" y="228.4526">void cannotStoreNullTrackData()</text><ellipse cx="49" cy="238.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="309" x="58" y="241.2573">void locationDataPointOffsetOutOfBoundsReturnsNull()</text><ellipse cx="49" cy="250.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="265" x="58" y="254.062">void trackDataOffsetOutOfBoundsReturnsNull()</text><ellipse cx="49" cy="263.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="284" x="58" y="266.8667">void nonexistentSatelliteNameReturnsEmptyNext()</text><ellipse cx="49" cy="276.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="269" x="58" y="279.6714">void lastSatelliteNameInListReturnsEmptyNext()</text><!--MD5=[6c3ae89235db7efba3a5d8ea9fd47e2d]
class DatabasePersistentStorageImplementation--><rect fill="#FEFECE" filter="url(#f1for805qzhkgw)" height="299.2891" id="DatabasePersistentStorageImplementation" style="stroke: #A80036; stroke-width: 1.5;" width="395" x="432.5" y="346"/><ellipse cx="489.75" cy="362" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M492.7188,367.6406 Q492.1406,367.9375 491.5,368.0781 Q490.8594,368.2344 490.1563,368.2344 Q487.6563,368.2344 486.3281,366.5938 Q485.0156,364.9375 485.0156,361.8125 Q485.0156,358.6875 486.3281,357.0313 Q487.6563,355.375 490.1563,355.375 Q490.8594,355.375 491.5,355.5313 Q492.1563,355.6875 492.7188,355.9844 L492.7188,358.7031 Q492.0938,358.125 491.5,357.8594 Q490.9063,357.5781 490.2813,357.5781 Q488.9375,357.5781 488.25,358.6563 Q487.5625,359.7188 487.5625,361.8125 Q487.5625,363.9063 488.25,364.9844 Q488.9375,366.0469 490.2813,366.0469 Q490.9063,366.0469 491.5,365.7813 Q492.0938,365.5 492.7188,364.9219 L492.7188,367.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="272" x="510.25" y="366.1543">DatabasePersistentStorageImplementation</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="433.5" x2="826.5" y1="378" y2="378"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="440.5" y="386"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="452.5" y="392.2104">int rfidData</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="440.5" y="398.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="452.5" y="405.0151">ArrayList&lt;LocationDataPoint&gt; locDataPoint</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="440.5" y="411.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="452.5" y="417.8198">ArrayList&lt;TrackData&gt; trackData</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="440.5" y="424.4141"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="452.5" y="430.6245">String[] nextSatellites</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="440.5" y="437.2188"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="452.5" y="443.4292">String mode</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="433.5" x2="826.5" y1="450.0234" y2="450.0234"/><ellipse cx="443.5" cy="461.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="452.5" y="464.2339">DatabasePersistentStorage(int rfidData,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="247" x="484.5" y="477.0386">ArrayList&lt;LocationDataPoint&gt; locDataPoint,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="484.5" y="489.8433">ArrayList&lt;TrackData&gt; trackData,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="484.5" y="502.6479">String[] nextSatellites)</text><ellipse cx="443.5" cy="529.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="452.5" y="532.2573">int locateRfidData()</text><ellipse cx="443.5" cy="541.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="452.5" y="545.062">LocationDataPoint getLocationDataPoint(int offset)</text><ellipse cx="443.5" cy="554.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="369" x="452.5" y="557.8667">void storeLocationDataPoint(LocationDataPoint locationDataPoint)</text><ellipse cx="443.5" cy="567.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="195" x="452.5" y="570.6714">TrackData getTrackData(int offset)</text><ellipse cx="443.5" cy="580.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="452.5" y="583.4761">void storeTrackData(TrackData trackData)</text><ellipse cx="443.5" cy="593.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="452.5" y="596.2808">String getMode()</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="433.5" x2="597" y1="515.6445" y2="515.6445"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="597" y="518.9526">Use Case 1</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="663" x2="826.5" y1="515.6445" y2="515.6445"/><ellipse cx="443.5" cy="622.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="452.5" y="625.8901">void storeMode(String mode)</text><ellipse cx="443.5" cy="635.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="452.5" y="638.6948">String getNextSat(String currentSat)</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="433.5" x2="597" y1="609.2773" y2="609.2773"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="597" y="612.5854">Use Case 2</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="663" x2="826.5" y1="609.2773" y2="609.2773"/><!--MD5=[d8df6b105e82f698e3603261466f245f]
class DatabasePersistentStorage--><rect fill="#FEFECE" filter="url(#f1for805qzhkgw)" height="184.0469" id="DatabasePersistentStorage" style="stroke: #A80036; stroke-width: 1.5;" width="395" x="432.5" y="80.5"/><ellipse cx="540.25" cy="96.5" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M536.1719,92.2656 L536.1719,90.1094 L543.5625,90.1094 L543.5625,92.2656 L541.0938,92.2656 L541.0938,100.3438 L543.5625,100.3438 L543.5625,102.5 L536.1719,102.5 L536.1719,100.3438 L538.6406,100.3438 L538.6406,92.2656 L536.1719,92.2656 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="171" x="560.75" y="100.6543">DatabasePersistentStorage</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="433.5" x2="826.5" y1="112.5" y2="112.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="433.5" x2="826.5" y1="120.5" y2="120.5"/><ellipse cx="443.5" cy="148.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="108" x="452.5" y="151.5151">int locateRfidData()</text><ellipse cx="443.5" cy="161.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="282" x="452.5" y="164.3198">LocationDataPoint getLocationDataPoint(int offset)</text><ellipse cx="443.5" cy="173.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="369" x="452.5" y="177.1245">void storeLocationDataPoint(LocationDataPoint locationDataPoint)</text><ellipse cx="443.5" cy="186.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="194" x="452.5" y="189.9292">TrackData getTrackData(int offset)</text><ellipse cx="443.5" cy="199.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="452.5" y="202.7339">void storeTrackData(TrackData trackData)</text><ellipse cx="443.5" cy="212.3281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="93" x="452.5" y="215.5386">String getMode()</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="433.5" x2="597" y1="134.9023" y2="134.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="597" y="138.2104">Use Case 1</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="663" x2="826.5" y1="134.9023" y2="134.9023"/><ellipse cx="443.5" cy="241.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="164" x="452.5" y="245.1479">void storeMode(String mode)</text><ellipse cx="443.5" cy="254.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="203" x="452.5" y="257.9526">String getNextSat(String currentSat)</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="433.5" x2="597" y1="228.5352" y2="228.5352"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="597" y="231.8433">Use Case 2</text><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 1.0,2.0;" x1="663" x2="826.5" y1="228.5352" y2="228.5352"/><!--MD5=[eb0961a570d8086d40299e5221360d47]
reverse link DatabasePersistentStorage to DatabasePersistentStorageImplementation--><path d="M630,284.71 C630,304.41 630,325.21 630,345.76 " fill="none" id="DatabasePersistentStorage&lt;-DatabasePersistentStorageImplementation" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="623,284.63,630,264.63,637,284.63,623,284.63" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[0a58acf7c622c55b01172ee4b5537f56]
link DatabasePersistentStorageImplementationTests to DatabasePersistentStorageImplementation--><path d="M355.54,286.22 C379.72,304.57 405.1,323.83 430.27,342.93 " fill="none" id="DatabasePersistentStorageImplementationTests-&gt;DatabasePersistentStorageImplementation" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="434.3,345.99,429.569,337.3518,430.3242,342.9581,424.7179,343.7132,434.3,345.99" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ec82e798e0cd42b4fa20b8a366ab0c41]
@startuml DatabasePersistentStorageImplementationTests_Closure


package edu.oakland.test.database {
    class DatabasePersistentStorageImplementationTests {
        + void rfidDataInIsRfidDataOut()
        + void offsetMatchDataPoint()
        + void locationDataPointInIsDataPointOut()
        + void offsetMatchTrackData()
        + void trackDataInIsTrackDataOut()
        + void readModeInIsModeOut()
        + void writeModeInIsModeOut()
        + void currentSatMatchNextSat()
        + void cannotStoreNullLocationDataPoint()
        + void cannotStoreNullTrackData()
        + void locationDataPointOffsetOutOfBoundsReturnsNull()
        + void trackDataOffsetOutOfBoundsReturnsNull()
        + void nonexistentSatelliteNameReturnsEmptyNext()
        + void lastSatelliteNameInListReturnsEmptyNext()
    }
}




package edu.oakland.production.database {
    class DatabasePersistentStorageImplementation {
        - int rfidData
        - ArrayList<LocationDataPoint> locDataPoint
        - ArrayList<TrackData> trackData
        - String[] nextSatellites
        - String mode
        __
        + DatabasePersistentStorage(int rfidData, 
        \tArrayList<LocationDataPoint> locDataPoint, 
        \tArrayList<TrackData> trackData, 
        \tString[] nextSatellites)
        .. Use Case 1 ..
        + int locateRfidData()
        + LocationDataPoint getLocationDataPoint(int offset)
        + void storeLocationDataPoint(LocationDataPoint locationDataPoint)
        + TrackData getTrackData(int offset)
        + void storeTrackData(TrackData trackData)
        + String getMode()
        .. Use Case 2 ..
        + void storeMode(String mode)
        + String getNextSat(String currentSat)
    }
}




package edu.oakland.production.database {
    interface DatabasePersistentStorage {
        __
        .. Use Case 1 ..
        {abstract} + int locateRfidData()
        {abstract} + LocationDataPoint getLocationDataPoint(int offset)
        {abstract} + void storeLocationDataPoint(LocationDataPoint locationDataPoint)
        {abstract} + TrackData getTrackData(int offset)
        {abstract} + void storeTrackData(TrackData trackData)
        {abstract} + String getMode()
        .. Use Case 2 ..
        {abstract} + void storeMode(String mode)
        {abstract} + String getNextSat(String currentSat)
    }
}






DatabasePersistentStorageImplementation .up.|> DatabasePersistentStorage





DatabasePersistentStorageImplementationTests ..> DatabasePersistentStorageImplementation



@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 GMT 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.9+11-Ubuntu-0ubuntu1
Operating System: Linux
Default Encoding: ANSI_X3.4-1968
Language: en
Country: US
--></g></svg>